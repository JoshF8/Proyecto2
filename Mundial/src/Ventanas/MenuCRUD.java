/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;
import Listas.ListaGeneral;
import Listas.NodoGeneral;
import Mundial.*;
import mundial.*;
import java.io.File;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Josh
 */
public class MenuCRUD extends javax.swing.JFrame {
    
    private String valores[] = {"usuarios", "equipos", "jugadores", "estampas"};
    private int tipo;
    /**
     * Creates new form MenuCRUD
     */
    public MenuCRUD(int tipo) {
        initComponents();
        this.tipo = tipo;
        this.setTitle("Menú " + valores[tipo]);
        if(tipo == 0){
            BotonCarga.setVisible(false);
        }
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonCrear = new javax.swing.JButton();
        BotonMostrar = new javax.swing.JButton();
        BotonCarga = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BotonCrear.setText("Crear");
        BotonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearActionPerformed(evt);
            }
        });

        BotonMostrar.setText("Mostrar");
        BotonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostrarActionPerformed(evt);
            }
        });

        BotonCarga.setText("Carga masiva");
        BotonCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(BotonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(BotonMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(BotonCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BotonCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearActionPerformed
        switch(tipo){
            case 0:
                Mundial.ventanas.crearVentana(new CrearCuenta());
                break;
            case 1:
                Mundial.ventanas.crearVentana(new FormularioEquipos());
                break;
            case 2:
                Mundial.ventanas.crearVentana(new FormularioJugador());
                break;
            case 3:
                Mundial.ventanas.crearVentana(new FormularioEstampa());
                break;
        }
    }//GEN-LAST:event_BotonCrearActionPerformed

    private void BotonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostrarActionPerformed
        ListaGeneral listaMostrar = null;
        switch(tipo){
            case 0:
                listaMostrar = Mundial.usuarios;
                break;
            case 1: 
                listaMostrar = Mundial.equipos;
                break;
            case 2:
                listaMostrar = Mundial.jugadores;
                break;
            case 3:
                listaMostrar = Mundial.estampas;
                break;
        }
        if(listaMostrar != null){
            Mundial.ventanas.crearVentana(new MostrarInformacion(tipo, listaMostrar));
        }else{
            JOptionPane.showMessageDialog(null, "Aún no hay " + valores[tipo] + " para mostrar.", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_BotonMostrarActionPerformed

    private void BotonCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargaActionPerformed
        String texto[], mensajeError = "Las líneas ";
        boolean error = false;
        int contador = 0, limites[] = {0,4,8,4};
        JFileChooser buscador = new JFileChooser();
        buscador.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos ecys", "ecys");
        buscador.setFileFilter(filtro);
        buscador.showOpenDialog(this);
        File archivo = buscador.getSelectedFile();
        if(archivo == null || archivo.getName().equals("")){
            JOptionPane.showMessageDialog(null, "Archivo inválido.", "Archivo inválido", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                Scanner lector = new Scanner(archivo);
                while(lector.hasNext()){
                    contador++;
                    texto = lector.nextLine().split("#");
                    if(texto.length == limites[tipo]){
                        if(!guardar(texto)){
                            mensajeError += contador + ", ";
                            error = true;
                        }
                    }else{
                        error = true;
                        mensajeError += contador + ", ";
                    }
                }
            } catch (Exception e) {
            } 
            mensajeError += "han tenido un error y no se han podido almacenar.";
            if(error){
                JOptionPane.showMessageDialog(null, mensajeError, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BotonCargaActionPerformed

    private boolean guardar(String datos[]){
        try {
            switch(tipo){
                case 1:
                    if(Mundial.equipos == null){
                        Mundial.equipos = new ListaGeneral(new NodoGeneral(new Equipo(datos[0], datos[1], Integer.valueOf(datos[2]),Integer.valueOf(datos[3]))));
                    }else{
                        Mundial.equipos.crearNodo(new Equipo(datos[0], datos[1], Integer.valueOf(datos[2]),Integer.valueOf(datos[3])));
                    }
                    break;
                case 2:
                    if(Mundial.jugadores == null){
                        Mundial.jugadores = new ListaGeneral(new NodoGeneral(new Jugador(datos[0], datos[1], datos[2], datos[3], datos[4], datos[5], Integer.valueOf(datos[6]), datos[7])));
                        Equipo equipo = buscarEquipo(datos[5]);
                        equipo.jugadores = new ListaGeneral(new NodoGeneral(Mundial.jugadores.nodoFinal.getItem()));
                    }else{
                        Mundial.jugadores.crearNodo(new Jugador(datos[0], datos[1], datos[2], datos[3], datos[4], datos[5], Integer.valueOf(datos[6]), datos[7]));
                        Equipo equipo = buscarEquipo(datos[5]);
                        if(equipo.jugadores == null){
                            equipo.jugadores = new ListaGeneral(new NodoGeneral(Mundial.jugadores.nodoFinal.getItem()));
                        }else{
                            equipo.jugadores.crearNodo(Mundial.jugadores.nodoFinal.getItem());
                        }
                    }
                    break;
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }
    
    private Equipo buscarEquipo(String codigo){
        NodoGeneral actual = Mundial.equipos.nodoInicio;
        while(actual != null){
            if(((Equipo) actual.getItem()).getCodigo().equals(codigo)){
                return ((Equipo) actual.getItem());
            }
            actual = actual.getSiguiente();
        }
        return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCRUD(0).setVisible(true);
            }
        });
    }
    
    @Override
    public void dispose(){
        Mundial.ventanas.cerrarVentana();
        super.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCarga;
    private javax.swing.JButton BotonCrear;
    private javax.swing.JButton BotonMostrar;
    // End of variables declaration//GEN-END:variables
}
